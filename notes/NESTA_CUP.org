#+title: Accelerating CUP reconstruction using NESTA optimization algorithm
#+author: Liren Zhu

#+latex_header: \usepackage{algorithm}
#+latex_header: \usepackage{listings}
#+latex_header: \newcommand{\norm}[2][2]{\ensuremath{\lVert #2 \rVert_{#1}}}
#+latex_header: \newcommand{\normtv}[1]{\ensuremath{\lVert #1 \rVert_\text{TV}}}

#+begin_abstract
This is a summary of theoretical and algorithmic results that are related with
using the NESTA algorithm in CUP reconstruction. The motivation of using NESTA
is to mitigate the major computational cost on the TV denoising proxy problem
that needs to be solved in every iteration of the TwIST and FISTA optimizers. I
have included the framework of NESTA, detailed factorization of using NESTA with
different CUP implementations, and derivation of the major steps in this note.
This document will, hopefully, help readers, including myself, to better
understand the implementation of this method.
#+end_abstract

* Introduction
  Currently, Compressed Ultrafast Photography (CUP) relies on a family of
  Iterative Shrinkage/Thresholding Algorithms (ISTA), including the Two-step
  Iterative Shrinkage/Thresholding (TwIST) algorithm and the Fast Iterative
  Shrinkage/Thresholding Algorithm (FISTA), to reconstruct the final datacube of
  the dynamic scene. While these methods produce excellent results, their needs
  of solving the Total Variation (TV) denoising proxy problem in every iteration
  are shown to make up most of the computation time, as well as require the user
  to pick non-intuitive parameters for the proxy problem.

  The NESTA optimizer, on the other hand, requires only one call to the
  differentiation operator and its adjoint each during on iteration, in order to
  realize l2 constrained TV minimization. Considering that CUP's observation
  operator and its adjoint (of all CUP implementations) are relatively cheap to
  perform, an optimizer that minimizes the computation time on TV is an ideal
  choice for CUP. In addition, instead of solving the TV-regularized l2 error
  minimization problem
  #+name: eq1
  \begin{equation}
  \min_x \frac{1}{2}\norm{b - Ax}^2 + \lambda\normtv{x}
  \end{equation}
  NESTA solves the following, more direct problem
  #+name: eq2
  \begin{equation}
  \min_x \normtv{x} \quad \text{s.t.}~ \norm{b - Ax} \le \epsilon
  \end{equation}
  While Eq. ([[eq1]]) has a rather arbitrary parameter $\lambda$, Eq. ([[eq2]]) requires
  a parameter $\epsilon$, which is closely related with the upper bound of the
  measurement noises. However, it is worth noticing that theoretical analyses
  have shown that Eq. ([[eq1]]) and ([[eq2]]) are equivalent when $\lambda$ and
  $\epsilon$ follow a certain relation and the true optimal points were reached
  in both problems.

* The NESTA framework
  Based on the technical report available at [[https://statweb.stanford.edu/~candes/nesta/][this website]], the NESTA algorithm
  can be laid out as the following steps:
  \begin{algorithm}
  \caption{General purpose NESTA solver}
  \label{alg:nesta_framework}
  \begin{lstlisting}[mathescape, escapeinside='']
    'Compute $\nabla f(x_k)$.'
    'Compute $y_k$:'
        '$y_k = \arg \min_{x\in Q_P} \frac{L}{2} \norm{x-x_k}^2$'
  \end{lstlisting}
  \end{algorithm}
